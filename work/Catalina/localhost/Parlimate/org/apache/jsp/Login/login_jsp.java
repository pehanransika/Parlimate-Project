/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.31
 * Generated at: 2024-11-15 07:12:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Login;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("    <title>Parlimate|Login</title>\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../container.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../index.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./loginu.css\" />\r\n");
      out.write("\r\n");
      out.write("    <!-- icons -->\r\n");
      out.write("    <link\r\n");
      out.write("            rel=\"stylesheet\"\r\n");
      out.write("            data-purpose=\"Layout StyleSheet\"\r\n");
      out.write("            title=\"Web Awesome\"\r\n");
      out.write("            href=\"/css/app-wa-09b459cf485d4b1f3304947240314c05.css?vsn=d\"\r\n");
      out.write("    />\r\n");
      out.write("\r\n");
      out.write("    <link\r\n");
      out.write("            rel=\"stylesheet\"\r\n");
      out.write("            href=\"https://site-assets.fontawesome.com/releases/v6.6.0/css/all.css\"\r\n");
      out.write("    />\r\n");
      out.write("    <link\r\n");
      out.write("            rel=\"stylesheet\"\r\n");
      out.write("            href=\"https://site-assets.fontawesome.com/releases/v6.6.0/css/sharp-regular.css\"\r\n");
      out.write("    />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"login-container col\">\r\n");
      out.write("    <div class=\"head col\">\r\n");
      out.write("        <h2 class=\"title\">Welcome to Parlimate</h2>\r\n");
      out.write("        <p>Please sign in or signup below</p>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"content col\">\r\n");
      out.write("        <button class=\"google-login btn row\">\r\n");
      out.write("            <svg\r\n");
      out.write("                    xmlns=\"http://www.w3.org/2000/svg\"\r\n");
      out.write("                    x=\"0px\"\r\n");
      out.write("                    y=\"0px\"\r\n");
      out.write("                    width=\"100\"\r\n");
      out.write("                    height=\"100\"\r\n");
      out.write("                    viewBox=\"0 0 48 48\"\r\n");
      out.write("            >\r\n");
      out.write("                <path\r\n");
      out.write("                        fill=\"#FFC107\"\r\n");
      out.write("                        d=\"M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12c0-6.627,5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24c0,11.045,8.955,20,20,20c11.045,0,20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z\"\r\n");
      out.write("                ></path>\r\n");
      out.write("                <path\r\n");
      out.write("                        fill=\"#FF3D00\"\r\n");
      out.write("                        d=\"M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z\"\r\n");
      out.write("                ></path>\r\n");
      out.write("                <path\r\n");
      out.write("                        fill=\"#4CAF50\"\r\n");
      out.write("                        d=\"M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36c-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z\"\r\n");
      out.write("                ></path>\r\n");
      out.write("                <path\r\n");
      out.write("                        fill=\"#1976D2\"\r\n");
      out.write("                        d=\"M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571c0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z\"\r\n");
      out.write("                ></path>\r\n");
      out.write("            </svg>\r\n");
      out.write("            Sign in with Google\r\n");
      out.write("        </button>\r\n");
      out.write("        <div class=\"email-section col\">\r\n");
      out.write("            <div class=\"seperator row\">\r\n");
      out.write("                <div class=\"line\"></div>\r\n");
      out.write("                <span>or use email</span>\r\n");
      out.write("                <div class=\"line\"></div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-fields col\">\r\n");
      out.write("                <input\r\n");
      out.write("                        type=\"email\"\r\n");
      out.write("                        name=\"login-email\"\r\n");
      out.write("                        id=\"login-email\"\r\n");
      out.write("                        placeholder=\"Email address\"\r\n");
      out.write("                />\r\n");
      out.write("                <div class=\"pswrd\">\r\n");
      out.write("                    <input\r\n");
      out.write("                            type=\"password\"\r\n");
      out.write("                            name=\"login-pswd\"\r\n");
      out.write("                            id=\"login-pswd\"\r\n");
      out.write("                            placeholder=\"Password\"\r\n");
      out.write("                    />\r\n");
      out.write("                    <i class=\"fa-solid fa-eye\" id=\"toggle-password\"></i>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"ops row\">\r\n");
      out.write("                <div class=\"remember row\">\r\n");
      out.write("                    <input\r\n");
      out.write("                            type=\"checkbox\"\r\n");
      out.write("                            name=\"remember-device\"\r\n");
      out.write("                            id=\"remember-device\"\r\n");
      out.write("                    />\r\n");
      out.write("                    <label for=\"remember-device\"\r\n");
      out.write("                    >Remember me on this device</label\r\n");
      out.write("                    >\r\n");
      out.write("                </div>\r\n");
      out.write("                <a href=\"#\">Forgot password?</a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <button class=\"btn login-btn\">Login</button>\r\n");
      out.write("            <div class=\"signup-section col\">\r\n");
      out.write("                <div class=\"divider\"></div>\r\n");
      out.write("                <span> Not a member? <a href=\"#\">Signup now</a> </span>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("    document.addEventListener('DOMContentLoaded', () => {\r\n");
      out.write("        const togglePassword = document.querySelector('#toggle-password');\r\n");
      out.write("        const passwordField = document.querySelector('#login-pswd');\r\n");
      out.write("\r\n");
      out.write("        togglePassword.addEventListener('click', () => {\r\n");
      out.write("            const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';\r\n");
      out.write("            passwordField.setAttribute('type', type);\r\n");
      out.write("            togglePassword.classList.toggle('fa-eye');\r\n");
      out.write("            togglePassword.classList.toggle('fa-eye-slash');\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
