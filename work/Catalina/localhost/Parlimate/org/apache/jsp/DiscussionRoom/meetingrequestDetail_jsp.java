/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2024-11-28 15:05:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.DiscussionRoom;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.time.LocalDateTime;

public final class meetingrequestDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fn:escapeXml", org.apache.taglibs.standard.functions.Functions.class, "escapeXml", new Class[] {java.lang.String.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/Group%20Project%20second%20year/JAR%20Files-20241102T061912Z-001/JAR%20Files/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153365282000L));
    _jspx_dependants.put("jar:file:/D:/Group%20Project%20second%20year/JAR%20Files-20241102T061912Z-001/JAR%20Files/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1730528383482L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.time.LocalDateTime");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Meeting Requests</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        /* General styles reused from previous JSP */\r\n");
      out.write("        body { font-family: Arial, sans-serif; background-color: #f5f7fb; margin: 20px; padding: 20px; }\r\n");
      out.write("        .top-bar { display: flex; justify-content: flex-end; margin-top: 80px; }\r\n");
      out.write("        .button-home { background-color: #007bff; color: white; padding: 12px 25px; border-radius: 8px; text-decoration: none; font-size: 16px; transition: background-color 0.3s ease; }\r\n");
      out.write("        .button-home:hover { background-color: #0056b3; }\r\n");
      out.write("        h2 { color: #3a3a3a; text-align: center; margin-bottom: 30px; }\r\n");
      out.write("        #searchInput { width: 100%; max-width: 200px; padding: 10px; margin-bottom: 20px; border: 1px solid #ccc; border-radius: 5px; outline: none; margin-left: 250px; }\r\n");
      out.write("        #searchInput:focus { border-color: #007bff; }\r\n");
      out.write("        .request-list { list-style-type: none; padding: 0; margin-left: 300px; margin-right: 20px; gap: 1.5rem; }\r\n");
      out.write("        .request-item { background-color: #ffffff; margin-bottom: 20px; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); padding: 20px; position: relative; display: flex; flex-direction: column; gap: 15px; cursor: pointer; }\r\n");
      out.write("        .request-item:hover { outline: 1px solid rgb(185, 185, 185); border-left: 0.75rem solid #5490FF; }\r\n");
      out.write("        .request-header { display: flex; justify-content: space-between; }\r\n");
      out.write("        .request-info h3 { margin: 0; font-size: 18px; color: #333; }\r\n");
      out.write("        .request-info p { margin: 0; font-size: 14px; color: #888; }\r\n");
      out.write("        .request-content { margin-top: 10px; font-size: 16px; color: #555; }\r\n");
      out.write("        .request-actions { display: flex; justify-content: flex-end; gap: 10px; }\r\n");
      out.write("        .button { border: none; padding: 10px 0; font-size: 14px; border-radius: 5px; transition: background-color 0.3s ease; width: 100px; height: 40px; text-align: center; display: flex; align-items: center; justify-content: center; }\r\n");
      out.write("        .button-update { background-color: #6a5acd; color: white; }\r\n");
      out.write("        .button-update:hover { background-color: #5b4ab5; }\r\n");
      out.write("        .button-delete { background-color: #f44336; color: white; }\r\n");
      out.write("        .button-delete:hover { background-color: #e53935; }\r\n");
      out.write("        .popup-modal { display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.5); justify-content: center; align-items: center; }\r\n");
      out.write("        .popup { background-color: white; padding: 20px; border-radius: 10px; width: 400px; position: relative; }\r\n");
      out.write("        .popup .close-btn { position: absolute; top: 10px; right: 10px; cursor: pointer; }\r\n");
      out.write("        .formSection { margin-bottom: 15px; }\r\n");
      out.write("        .formSection label { display: block; margin-bottom: 5px; }\r\n");
      out.write("        .formSection input, .formSection textarea, .formSection select { width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 5px; }\r\n");
      out.write("        .popbtns { text-align: center; margin-top: 20px; }\r\n");
      out.write("        .post-btn { padding: 10px 20px; background-color: #6a5acd; color: white; border: none; border-radius: 5px; cursor: pointer; }\r\n");
      out.write("        .post-btn:hover { background-color: #5b4ab5; }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"top-bar\">\r\n");
      out.write("    <a href=\"index.jsp\" class=\"button-home\">Go to Home</a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<h2>My Meeting Requests</h2>\r\n");
      out.write("\r\n");
      out.write("<input type=\"text\" id=\"searchInput\" placeholder=\"Search requests...\" onkeyup=\"filterRequests()\">\r\n");
      out.write("\r\n");
      out.write("<ul class=\"request-list\">\r\n");
      out.write("    ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</ul>\r\n");
      out.write("\r\n");
      out.write("<div class=\"popup-modal\" id=\"editPopup\">\r\n");
      out.write("    <div class=\"popup\">\r\n");
      out.write("        <span>Edit Request</span>\r\n");
      out.write("        <button class=\"close-btn\" onclick=\"closeEditPopup()\"></button>\r\n");
      out.write("        <form action=\"UpdateMeetingRequestServlet\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("            <!-- Hidden field for meeting request ID -->\r\n");
      out.write("            <input type=\"text\" name=\"meetingrequestid\" id=\"meetingrequestid\" value=\"3\" />\r\n");
      out.write("\r\n");
      out.write("            <!-- Input fields for other parameters -->\r\n");
      out.write("            <div class=\"formSection\">\r\n");
      out.write("                <label for=\"editTopic\">Topic</label>\r\n");
      out.write("                <input type=\"text\" id=\"editTopic\" name=\"topic\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${topic}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"formSection\">\r\n");
      out.write("                <label for=\"editPurpose\">Purpose</label>\r\n");
      out.write("                <textarea id=\"editPurpose\" name=\"purposeofmeeting\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${purposeofmeeting}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"formSection\">\r\n");
      out.write("                <label for=\"editDate\">Date</label>\r\n");
      out.write("                <input type=\"date\" id=\"editDate\" name=\"proposaldate\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${proposaldate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"formSection\">\r\n");
      out.write("                <label for=\"editTime\">Time</label>\r\n");
      out.write("                <input type=\"time\" id=\"editTime\" name=\"proposaltime\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${proposaltime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"formSection\">\r\n");
      out.write("                <label for=\"editOpponents\">Opponents</label>\r\n");
      out.write("                <input type=\"text\" id=\"editOpponents\" name=\"opponentname\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${opponentname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"formSection\">\r\n");
      out.write("                <label for=\"editHost\">Host</label>\r\n");
      out.write("                <input type=\"text\" id=\"editHost\" name=\"preferredhost\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${preferredhost}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"popbtns\">\r\n");
      out.write("                <button type=\"submit\" class=\"post-btn\">Save Changes</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    function openEditPopup(\r\n");
      out.write("        meetingrequestid, topic, purposeofmeeting, proposaldate,\r\n");
      out.write("        proposaltime, opponentname, preferredhost, estimatedduration,\r\n");
      out.write("        discussionformat, partyaffiliation\r\n");
      out.write("    ) {\r\n");
      out.write("        // Ensure the popup is displayed\r\n");
      out.write("        const editPopup = document.getElementById('editPopup');\r\n");
      out.write("        if (editPopup) {\r\n");
      out.write("            editPopup.style.display = 'flex';\r\n");
      out.write("        } else {\r\n");
      out.write("            console.error(\"Edit popup element not found.\");\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Set the meeting request ID\r\n");
      out.write("        const meetingRequestIdField = document.getElementById('meetingRequestId');\r\n");
      out.write("        if (meetingRequestIdField) {\r\n");
      out.write("            meetingRequestIdField.value = meetingrequestid || '';\r\n");
      out.write("        } else {\r\n");
      out.write("            console.error(\"Meeting Request ID field not found.\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Set the topic\r\n");
      out.write("        const topicField = document.getElementById('editTopic');\r\n");
      out.write("        if (topicField) {\r\n");
      out.write("            topicField.value = topic || '';\r\n");
      out.write("        } else {\r\n");
      out.write("            console.error(\"Topic field not found.\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Set the purpose of meeting\r\n");
      out.write("        const purposeField = document.getElementById('editPurpose');\r\n");
      out.write("        if (purposeField) {\r\n");
      out.write("            purposeField.value = purposeofmeeting || '';\r\n");
      out.write("        } else {\r\n");
      out.write("            console.error(\"Purpose of Meeting field not found.\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Set the proposal date\r\n");
      out.write("        const dateField = document.getElementById('editDate');\r\n");
      out.write("        if (dateField) {\r\n");
      out.write("            dateField.value = proposaldate || '';\r\n");
      out.write("        } else {\r\n");
      out.write("            console.error(\"Proposal Date field not found.\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Set the proposal time\r\n");
      out.write("        const timeField = document.getElementById('editTime');\r\n");
      out.write("        if (timeField) {\r\n");
      out.write("            timeField.value = proposaltime || '';\r\n");
      out.write("        } else {\r\n");
      out.write("            console.error(\"Proposal Time field not found.\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Set the opponent name\r\n");
      out.write("        const opponentField = document.getElementById('editOpponents');\r\n");
      out.write("        if (opponentField) {\r\n");
      out.write("            opponentField.value = opponentname || '';\r\n");
      out.write("        } else {\r\n");
      out.write("            console.error(\"Opponent Name field not found.\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Set the preferred host\r\n");
      out.write("        const hostField = document.getElementById('editHost');\r\n");
      out.write("        if (hostField) {\r\n");
      out.write("            hostField.value = preferredhost || '';\r\n");
      out.write("        } else {\r\n");
      out.write("            console.error(\"Preferred Host field not found.\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Set the estimated duration\r\n");
      out.write("        const durationField = document.getElementById('editduration');\r\n");
      out.write("        if (durationField) {\r\n");
      out.write("            durationField.value = estimatedduration || '';\r\n");
      out.write("        } else {\r\n");
      out.write("            console.error(\"Estimated Duration field not found.\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Optionally handle discussion format and party affiliation\r\n");
      out.write("        const discussionFormatField = document.getElementById('editDiscussionFormat');\r\n");
      out.write("        if (discussionFormatField) {\r\n");
      out.write("            discussionFormatField.value = discussionformat || '';\r\n");
      out.write("        } else {\r\n");
      out.write("            console.warn(\"Discussion Format field not found.\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        const partyAffiliationField = document.getElementById('editPartyAffiliation');\r\n");
      out.write("        if (partyAffiliationField) {\r\n");
      out.write("            partyAffiliationField.value = partyaffiliation || '';\r\n");
      out.write("        } else {\r\n");
      out.write("            console.warn(\"Party Affiliation field not found.\");\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function closeEditPopup() {\r\n");
      out.write("        document.getElementById('editPopup').style.display = 'none';\r\n");
      out.write("    }\r\n");
      out.write("    function filterRequests() {\r\n");
      out.write("        const input = document.getElementById('searchInput').value.toLowerCase();\r\n");
      out.write("        const requests = document.querySelectorAll('.request-item');\r\n");
      out.write("        requests.forEach(req => {\r\n");
      out.write("            const text = req.textContent.toLowerCase();\r\n");
      out.write("            req.style.display = text.includes(input) ? '' : 'none';\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /DiscussionRoom/meetingrequestDetail.jsp(55,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("request");
    // /DiscussionRoom/meetingrequestDetail.jsp(55,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/DiscussionRoom/meetingrequestDetail.jsp(55,4) '${allMeetingRequests}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${allMeetingRequests}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("        <li class=\"request-item\">\r\n");
          out.write("            <div class=\"request-header\">\r\n");
          out.write("                <h3>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.topic}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</h3>\r\n");
          out.write("                <p>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.proposaldate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(' ');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.proposaltime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</p>\r\n");
          out.write("            </div>\r\n");
          out.write("            <div class=\"request-content\">\r\n");
          out.write("                <p><strong>Purpose:</strong> ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.purposeofmeeting}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</p>\r\n");
          out.write("                <p><strong>Opponents:</strong> ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.opponentname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</p>\r\n");
          out.write("                <p><strong>Host:</strong> ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.preferredhost}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</p>\r\n");
          out.write("            </div>\r\n");
          out.write("            <div class=\"request-actions\">\r\n");
          out.write("                <button\r\n");
          out.write("                        class=\"button button-update\"\r\n");
          out.write("                        onclick=\"openEditPopup(\r\n");
          out.write("                                '");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.meetingrequestid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("',\r\n");
          out.write("                                '");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.topic}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("',\r\n");
          out.write("                                '");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:escapeXml(request.purposeofmeeting)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
          out.write("',\r\n");
          out.write("                                '");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.proposaldate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("',\r\n");
          out.write("                                '");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.proposaltime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("',\r\n");
          out.write("                                '");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.opponentname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("',\r\n");
          out.write("                                '");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.preferredhost}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("')\">\r\n");
          out.write("                    Update\r\n");
          out.write("                </button>\r\n");
          out.write("                <form action=\"DeleteNewMeetingRequestServlet\" method=\"post\" onsubmit=\"return confirm('Are you sure?');\">\r\n");
          out.write("                    <input type=\"hidden\" name=\"meetingrequestid\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.meetingrequestid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" />\r\n");
          out.write("                    <button type=\"submit\" class=\"button button-delete\">Delete</button>\r\n");
          out.write("                </form>\r\n");
          out.write("            </div>\r\n");
          out.write("        </li>\r\n");
          out.write("    ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    return false;
  }
}
